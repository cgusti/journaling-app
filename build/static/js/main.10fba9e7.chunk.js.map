{"version":3,"sources":["components/Nav.js","components/Article.js","components/ArticleEntry.js","firebaseConfig.js","services/authService.js","services/articleService.js","components/App.js","index.js"],"names":["Nav","articles","setArticle","map","a","onClick","title","id","Article","article","className","date","body","ArticleEntry","addArticle","useState","setTitle","setBody","error","setError","onSubmit","e","preventDefault","trim","value","onChange","target","rows","type","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","SignIn","signInWithPopup","GoogleAuthProvider","SignOut","currentUser","displayName","signOut","data","Timestamp","now","addDoc","collection","docRef","getDocs","query","orderBy","limit","snapshot","docs","doc","App","setArticles","writing","setWriting","user","setUser","useEffect","onAuthStateChanged","useAuthentication","fetchArticles","then","createArticle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10fba9e7.chunk.js","sourcesContent":["export default function Nav({ articles, setArticle }) {\n  return (\n    <nav>\n      {!articles\n        ? \"No articles\"\n        : articles.map((a) => (\n            <p key={a.id} onClick={() => setArticle(a)}>\n              {a.title}\n            </p>\n          ))}\n    </nav>\n  );\n}\n","export default function Article({ article }) {\n  return (\n    <article>\n      {!article ? (\n        <p>No article selected</p>\n      ) : (\n        <section>\n          <h2>{article.title}</h2>\n          <p className=\"date\">{`Posted: ${article.date}`}</p>\n          <p className=\"body\">{article.body}</p>\n        </section>\n      )}\n    </article>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function ArticleEntry({ addArticle }) {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  function submit(e) {\n    setError(null);\n    e.preventDefault();\n    if (!title.trim() || !body.trim()) {\n      setError(\"Both the title and body must be supplied\");\n    } else {\n      addArticle({ title, body });\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={submit}>\n        {error && <p className=\"error\">{error}</p>}\n        Title\n        <input value={title} onChange={(e) => setTitle(e.target.value)} />\n        Body\n        <textarea\n          rows=\"8\"\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        ></textarea>\n        <button type=\"submit\">Create</button>\n      </form>\n    </div>\n  );\n}\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBfygcHv46JCt67Z-fzcsOdjv7R6EZsOAQ\",\r\n  authDomain: \"blog-2c740.firebaseapp.com\",\r\n  projectId: \"blog-2c740\",\r\n  storageBucket: \"blog-2c740.appspot.com\",\r\n  messagingSenderId: \"555647485361\",\r\n  appId: \"1:555647485361:web:8563ec78842627f4d3a990\",\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n","import { useState, useEffect } from \"react\";\r\nimport { signInWithPopup, GoogleAuthProvider, signOut } from \"firebase/auth\";\r\nimport { auth } from \"../firebaseConfig\";\r\n\r\nexport function SignIn() {\r\n  return (\r\n    <button onClick={() => signInWithPopup(auth, new GoogleAuthProvider())}>\r\n      Sign In\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function SignOut() {\r\n  return (\r\n    <div>\r\n      Hello, {auth.currentUser.displayName} &nbsp;\r\n      <button onClick={() => signOut(auth)}>Sign Out</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function useAuthentication() {\r\n  const [user, setUser] = useState(null);\r\n  useEffect(() => {\r\n    return auth.onAuthStateChanged((user) => {\r\n      user ? setUser(user) : setUser(null);\r\n    });\r\n  }, []);\r\n  return user;\r\n}\r\n","// This service completely hides the data store from the rest of the app.\n// No other part of the app knows how the data is stored. If anyone wants\n// to read or write data, they have to go through this service.\n\nimport { db } from \"../firebaseConfig\";\nimport {\n  collection,\n  query,\n  getDocs,\n  addDoc,\n  orderBy,\n  limit,\n  Timestamp,\n} from \"firebase/firestore\";\n\nexport async function createArticle({ title, body }) {\n  const data = { title, body, date: Timestamp.now() };\n  const docRef = await addDoc(collection(db, \"articles\"), data);\n  return { id: docRef.id, ...data };\n}\n\n// NOT FINISHED: This only gets the first 20 articles. In a real app,\n// you implement pagination.\nexport async function fetchArticles() {\n  const snapshot = await getDocs(\n    query(collection(db, \"articles\"), orderBy(\"date\", \"desc\"), limit(20))\n  );\n  return snapshot.docs.map((doc) => ({\n    id: doc.id,\n    ...doc.data(),\n  }));\n}\n","import { useEffect, useState } from \"react\";\nimport Nav from \"./Nav\";\nimport Article from \"./Article\";\nimport ArticleEntry from \"./ArticleEntry\";\nimport { SignIn, SignOut, useAuthentication } from \"../services/authService\";\nimport { fetchArticles, createArticle } from \"../services/articleService\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [articles, setArticles] = useState([]);\n  const [article, setArticle] = useState(null);\n  const [writing, setWriting] = useState(false);\n  const user = useAuthentication();\n\n  // This is a trivial app, so just fetch all the articles only when\n  // a user logs in. A real app would do pagination. Note that\n  // \"fetchArticles\" is what gets the articles from the service and\n  // then \"setArticles\" writes them into the React state.\n  useEffect(() => {\n    if (user) {\n      fetchArticles().then(setArticles);\n    }\n  }, [user]);\n\n  // Update the \"database\" *then* update the internal React state. These\n  // two steps are definitely necessary.\n  function addArticle({ title, body }) {\n    createArticle({ title, body }).then((article) => {\n      setArticle(article);\n      setArticles([article, ...articles]);\n      setWriting(false);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        Blog\n        {user && <button onClick={() => setWriting(true)}>New Article</button>}\n        {!user ? <SignIn /> : <SignOut />}\n      </header>\n\n      {!user ? \"\" : <Nav articles={articles} setArticle={setArticle} />}\n\n      {!user ? (\n        \"\"\n      ) : writing ? (\n        <ArticleEntry addArticle={addArticle} />\n      ) : (\n        <Article article={article} />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}